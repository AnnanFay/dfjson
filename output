{:tag :data-definition, :attrs nil, :content [{:tag :bitfield-type, :attrs {:type-name "unit_flags1", :base-type "uint32_t"}, :content [{:tag :flag-bit, :attrs {:name "move_state", :comment "Can the dwarf move or are they waiting for their movement timer"}, :content nil} {:tag :flag-bit, :attrs {:name "dead", :comment "Dead (might also be set for incoming/leaving critters that are alive)"}, :content nil} {:tag :flag-bit, :attrs {:name "has_mood", :comment "Currently in mood"}, :content nil} {:tag :flag-bit, :attrs {:name "had_mood", :comment "Had a mood already"}, :content nil} {:tag :flag-bit, :attrs {:name "marauder", :comment "wide class of invader/inside creature attackers"}, :content nil} {:tag :flag-bit, :attrs {:name "drowning", :comment "Is currently drowning"}, :content nil} {:tag :flag-bit, :attrs {:name "merchant", :comment "An active merchant"}, :content nil} {:tag :flag-bit, :attrs {:name "forest", :comment "used for units no longer linked to merchant/diplomacy, they just try to leave mostly"}, :content nil} {:tag :flag-bit, :attrs {:name "left", :comment "left the map"}, :content nil} {:tag :flag-bit, :attrs {:name "rider", :comment "Is riding an another creature"}, :content nil} {:tag :flag-bit, :attrs {:name "incoming"}, :content nil} {:tag :flag-bit, :attrs {:name "diplomat"}, :content nil} {:tag :flag-bit, :attrs {:name "zombie"}, :content nil} {:tag :flag-bit, :attrs {:name "skeleton"}, :content nil} {:tag :flag-bit, :attrs {:name "can_swap", :comment "Can swap tiles during movement (prevents multiple swaps)"}, :content nil} {:tag :flag-bit, :attrs {:name "on_ground", :comment "The creature is laying on the floor, can be conscious"}, :content nil} {:tag :flag-bit, :attrs {:name "projectile", :comment "Launched into the air? Funny."}, :content nil} {:tag :flag-bit, :attrs {:name "active_invader", :comment "Active invader (for organized ones)"}, :content nil} {:tag :flag-bit, :attrs {:name "hidden_in_ambush"}, :content nil} {:tag :flag-bit, :attrs {:name "invader_origin", :comment "Invader origin (could be inactive and fleeing)"}, :content nil} {:tag :flag-bit, :attrs {:name "coward", :comment "Will flee if invasion turns around"}, :content nil} {:tag :flag-bit, :attrs {:name "hidden_ambusher", :comment "Active marauder/invader moving inward?"}, :content nil} {:tag :flag-bit, :attrs {:name "invades", :comment "Marauder resident/invader moving in all the way"}, :content nil} {:tag :flag-bit, :attrs {:name "check_flows", :comment "Check against flows next time you get a chance"}, :content nil} {:tag :flag-bit, :attrs {:name "ridden"}, :content nil} {:tag :flag-bit, :attrs {:name "caged"}, :content nil} {:tag :flag-bit, :attrs {:name "tame"}, :content nil} {:tag :flag-bit, :attrs {:name "chained"}, :content nil} {:tag :flag-bit, :attrs {:name "royal_guard"}, :content nil} {:tag :flag-bit, :attrs {:name "fortress_guard"}, :content nil} {:tag :flag-bit, :attrs {:name "suppress_wield"}, :content nil} {:tag :flag-bit, :attrs {:name "important_historical_figure", :comment "Is an important historical figure"}, :content nil}]} {:tag :bitfield-type, :attrs {:type-name "unit_flags2", :base-type "uint32_t"}, :content [{:tag :flag-bit, :attrs {:name "swimming"}, :content nil} {:tag :flag-bit, :attrs {:name "sparring"}, :content nil} {:tag :flag-bit, :attrs {:name "no_notify", :comment "Do not notify about level gains (for embark etc)"}, :content nil} {:tag :flag-bit, :attrs {:name "unused"}, :content nil} {:tag :flag-bit, :attrs {:name "calculated_nerves"}, :content nil} {:tag :flag-bit, :attrs {:name "calculated_bodyparts"}, :content nil} {:tag :flag-bit, :attrs {:name "important_historical_figure", :comment "Is important historical figure (slight variation)"}, :content nil} {:tag :flag-bit, :attrs {:name "killed", :comment "Has been killed by kill function (slightly different from dead, not necessarily violent death)"}, :content nil} {:tag :flag-bit, :attrs {:name "cleanup_1", :comment "Must be forgotten by forget function (just cleanup)"}, :content nil} {:tag :flag-bit, :attrs {:name "cleanup_2", :comment "Must be deleted (cleanup)"}, :content nil} {:tag :flag-bit, :attrs {:name "cleanup_3", :comment "Recently forgotten (cleanup)"}, :content nil} {:tag :flag-bit, :attrs {:name "for_trade", :comment "Offered for trade"}, :content nil} {:tag :flag-bit, :attrs {:name "trade_resolved"}, :content nil} {:tag :flag-bit, :attrs {:name "has_breaks"}, :content nil} {:tag :flag-bit, :attrs {:name "gutted"}, :content nil} {:tag :flag-bit, :attrs {:name "circulatory_spray"}, :content nil} {:tag :flag-bit, :attrs {:name "locked_in_for_trading", :comment "Locked in for trading (it's a projectile on the other set of flags, might be what the flying was)"}, :content nil} {:tag :flag-bit, :attrs {:name "slaughter", :comment "marked for slaughter"}, :content nil} {:tag :flag-bit, :attrs {:name "underworld", :comment "Underworld creature"}, :content nil} {:tag :flag-bit, :attrs {:name "resident", :comment "Current resident"}, :content nil} {:tag :flag-bit, :attrs {:name "cleanup_4", :comment "Marked for special cleanup as unused load from unit block on disk"}, :content nil} {:tag :flag-bit, :attrs {:name "calculated_insulation", :comment "Insulation from clothing calculated"}, :content nil} {:tag :flag-bit, :attrs {:name "visitor_uninvited", :comment "Uninvited guest"}, :content nil} {:tag :flag-bit, :attrs {:name "visitor"}, :content nil} {:tag :flag-bit, :attrs {:name "calculated_inventory", :comment "Inventory order calculated"}, :content nil} {:tag :flag-bit, :attrs {:name "vision_good", :comment "Vision -- have good part"}, :content nil} {:tag :flag-bit, :attrs {:name "vision_damaged", :comment "Vision -- have damaged part"}, :content nil} {:tag :flag-bit, :attrs {:name "vision_missing", :comment "Vision -- have missing part"}, :content nil} {:tag :flag-bit, :attrs {:name "breathing_good", :comment "Breathing -- have good part"}, :content nil} {:tag :flag-bit, :attrs {:name "breathing_problem", :comment "Breathing -- having a problem"}, :content nil} {:tag :flag-bit, :attrs {:name "roaming_wilderness_population_source"}, :content nil} {:tag :flag-bit, :attrs {:name "roaming_wilderness_population_source_not_a_map_feature"}, :content nil}]} {:tag :bitfield-type, :attrs {:type-name "unit_flags3", :base-type "uint32_t"}, :content [{:tag :flag-bit, :attrs {:name "unk0", :comment "Is 1 for new and dead creatures, periodicaly set to 0 for non-dead creatures."}, :content nil} {:tag :flag-bit, :attrs {:name "unk1", :comment "Is 1 for new creatures, periodically set to 0 for non-dead creatures."}, :content nil} {:tag :flag-bit, :attrs {:name "unk2", :comment "Is set to 1 every tick for non-dead creatures."}, :content nil} {:tag :flag-bit, :attrs {:name "unk3", :comment "Is periodically set to 0 for non-dead creatures."}, :content nil} {:tag :flag-bit, :attrs {:name "announce_titan", :comment "Announces creature like an FB or titan."}, :content nil} {:tag :flag-bit, :attrs {:name "unk5"}, :content nil} {:tag :flag-bit, :attrs {:name "unk6"}, :content nil} {:tag :flag-bit, :attrs {:name "unk7"}, :content nil} {:tag :flag-bit, :attrs {:name "unk8", :comment "Is set to 1 every tick for non-dead creatures."}, :content nil} {:tag :flag-bit, :attrs {:name "unk9", :comment "Is set to 0 every tick for non-dead creatures."}, :content nil} {:tag :flag-bit, :attrs {:name "scuttle"}, :content [{:tag :comment, :attrs nil, :content ["\n                Scuttle creature: causes creature to be killed, leaving a behind\n                corpse and generating negative thoughts like a real kill.\n            "]}]} {:tag :flag-bit, :attrs {:name "unk11"}, :content nil} {:tag :flag-bit, :attrs {:name "ghostly"}, :content nil}]} {:tag :struct-type, :attrs {:type-name "unit", :key-field "id", :instance-vector "$global.world.units.all"}, :content [{:tag :compound, :attrs {:type-name "language_name", :name "name"}, :content nil} {:tag :code-helper, :attrs {:name "describe"}, :content ["\n            (describe-obj $.name)\n            (awhen (find-creature $.race)\n            (fmt \"~:(~A ~A~)\" $it.caste[$.caste].caste_id $it.creature_id))\n        "]} {:tag :stl-string, :attrs {:name "custom_profession"}, :content nil} {:tag :enum, :attrs {:base-type "int16_t", :name "profession", :type-name "profession"}, :content nil} {:tag :enum, :attrs {:base-type "int16_t", :name "profession2", :type-name "profession"}, :content nil} {:tag :uint32_t, :attrs {:name "race", :ref-target "creature_raw"}, :content nil} {:tag :int16_t, :attrs {:name "x"}, :content nil} {:tag :int16_t, :attrs {:name "y"}, :content nil} {:tag :int16_t, :attrs {:name "z"}, :content nil} {:tag :int16_t, :attrs {:name "old_x"}, :content [{:tag :comment, :attrs nil, :content ["\n                E.g. for a dead miner, holds the place where he\n                was likely hanging around when he got the command\n                to mine in an aquifer.\n            "]}]} {:tag :int16_t, :attrs {:name "old_y"}, :content nil} {:tag :int16_t, :attrs {:name "old_z"}, :content nil} {:tag :compound, :attrs {:name "unknown1"}, :content [{:tag :uint32_t, :attrs {:name "unk_9c"}, :content nil} {:tag :int16_t, :attrs {:name "unk_a0"}, :content nil} {:tag :padding, :attrs {:size "2"}, :content nil} {:tag :int16_t, :attrs {:name "unk_a4a"}, :content nil} {:tag :int16_t, :attrs {:name "unk_a4b"}, :content nil}]} {:tag :compound, :attrs {:name "path"}, :content [{:tag :int16_t, :attrs {:name "dest_x"}, :content nil} {:tag :int16_t, :attrs {:name "dest_y"}, :content nil} {:tag :int16_t, :attrs {:name "dest_z"}, :content nil} {:tag :int16_t, :attrs {:name "unk_ae", :comment "-1 unless dest valid"}, :content nil} {:tag :stl-vector, :attrs {:name "path_x", :type-name "int16_t"}, :content nil} {:tag :stl-vector, :attrs {:name "path_y", :type-name "int16_t"}, :content nil} {:tag :stl-vector, :attrs {:name "path_z", :type-name "int16_t"}, :content nil}]} {:tag :compound, :attrs {:name "flags1", :type-name "unit_flags1"}, :content nil} {:tag :compound, :attrs {:name "flags2", :type-name "unit_flags2"}, :content nil} {:tag :compound, :attrs {:name "flags3", :type-name "unit_flags3"}, :content nil} {:tag :compound, :attrs {:name "unknown2"}, :content [{:tag :int8_t, :attrs {:name "unk_ec"}, :content nil} {:tag :int32_t, :attrs {:name "unk_f0"}, :content nil} {:tag :int16_t, :attrs {:name "unk_f4"}, :content nil} {:tag :padding, :attrs {:size "2"}, :content nil}]} {:tag :uint16_t, :attrs {:name "caste", :ref-target "caste_raw", :aux-value "$$.race"}, :content nil} {:tag :uint8_t, :attrs {:name "sex"}, :content nil} {:tag :int32_t, :attrs {:name "id"}, :content nil} {:tag :int16_t, :attrs {:name "unk_100"}, :content nil} {:tag :int32_t, :attrs {:name "unk_104"}, :content nil} {:tag :int32_t, :attrs {:name "civ_id", :ref-target "historical_entity"}, :content nil} {:tag :int32_t, :attrs {:name "population_id", :ref-target "entity_population"}, :content nil} {:tag :compound, :attrs {:name "unknown3"}, :content [{:tag :int32_t, :attrs {:name "unk_110"}, :content nil} {:tag :stl-vector, :attrs {:name "unk_114"}, :content nil} {:tag :stl-vector, :attrs {:name "unk_124"}, :content nil} {:tag :stl-vector, :attrs {:name "unk_134"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_144"}, :content nil}]} {:tag :stl-vector, :attrs {:name "meetings"}, :content [{:tag :pointer, :attrs {:type-name "meeting_ref"}, :content nil}]} {:tag :stl-vector, :attrs {:name "refs"}, :content [{:tag :pointer, :attrs {:type-name "general_ref"}, :content nil}]} {:tag :compound, :attrs {:name "military"}, :content [{:tag :int32_t, :attrs {:name "squad_index", :ref-target "squad"}, :content nil} {:tag :int32_t, :attrs {:name "squad_position"}, :content nil} {:tag :int32_t, :attrs {:name "unk_170"}, :content nil} {:tag :int32_t, :attrs {:name "draft_timer"}, :content nil} {:tag :int16_t, :attrs {:name "cur_uniform"}, :content nil} {:tag :static-array, :attrs {:name "uniforms", :count "4"}, :content [{:tag :stl-vector, :attrs nil, :content [{:tag :int32_t, :attrs {:ref-target "item"}, :content nil}]}]} {:tag :bitfield, :attrs {:name "pickup_flags"}, :content [{:tag :flag-bit, :attrs {:name "update"}, :content nil}]} {:tag :stl-vector, :attrs {:name "uniform_pickup"}, :content [{:tag :int32_t, :attrs {:ref-target "item"}, :content nil}]} {:tag :stl-vector, :attrs {:name "uniform_drop"}, :content [{:tag :int32_t, :attrs {:ref-target "item"}, :content nil}]} {:tag :stl-vector, :attrs {:name "individual_drills"}, :content [{:tag :int32_t, :attrs {:ref-target "activity_entry"}, :content nil}]}]} {:tag :compound, :attrs {:name "unknown4"}, :content [{:tag :int16_t, :attrs {:name "unk_1f0_a"}, :content nil} {:tag :int16_t, :attrs {:name "unk_1f0_b"}, :content nil} {:tag :int16_t, :attrs {:name "unk_1f4"}, :content nil} {:tag :int32_t, :attrs {:name "unk_1f8"}, :content nil} {:tag :int32_t, :attrs {:name "unk_1fc"}, :content nil} {:tag :int32_t, :attrs {:name "unk_200"}, :content nil} {:tag :int16_t, :attrs {:name "unk_204"}, :content nil} {:tag :uint32_t, :attrs {:name "animal_leave_countdown", :comment "once 0, it heads for the edge and leaves"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_20c"}, :content nil}]} {:tag :int16_t, :attrs {:name "mood"}, :content nil} {:tag :int16_t, :attrs {:name "unk_18e"}, :content nil} {:tag :compound, :attrs {:name "relations"}, :content [{:tag :uint32_t, :attrs {:name "pregnancy_timer"}, :content nil} {:tag :pointer, :attrs {:name "pregnancy_ptr"}, :content nil} {:tag :int16_t, :attrs {:name "unk_21c_a"}, :content nil} {:tag :int16_t, :attrs {:name "unk_21c_b"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_220"}, :content nil} {:tag :int32_t, :attrs {:name "birth_year"}, :content nil} {:tag :int32_t, :attrs {:name "birth_time"}, :content nil} {:tag :int32_t, :attrs {:name "old_year", :comment "could there be a death of old age time??"}, :content nil} {:tag :int32_t, :attrs {:name "old_time"}, :content nil} {:tag :pointer, :attrs {:type-name "unit", :name "following"}, :content nil} {:tag :uint16_t, :attrs {:name "unk_238"}, :content nil} {:tag :int32_t, :attrs {:name "pet_owner_id", :ref-target "unit"}, :content nil} {:tag :int32_t, :attrs {:name "married_id", :ref-target "unit", :comment "not used in relationship screen.."}, :content nil} {:tag :int32_t, :attrs {:name "mother_id", :ref-target "unit"}, :content nil} {:tag :int32_t, :attrs {:name "father_id", :ref-target "unit"}, :content nil} {:tag :int32_t, :attrs {:name "last_attacker_id", :ref-target "unit"}, :content nil} {:tag :int32_t, :attrs {:name "enemy_group_leader_id", :ref-target "unit"}, :content nil} {:tag :int32_t, :attrs {:name "unk_254"}, :content nil} {:tag :int32_t, :attrs {:name "unk_258"}, :content nil} {:tag :int32_t, :attrs {:name "unk_25c_mother"}, :content nil} {:tag :int32_t, :attrs {:name "lover_id", :ref-target "unit"}, :content nil} {:tag :int16_t, :attrs {:name "unk_264"}, :content nil}]} {:tag :compound, :attrs {:name "last_hit"}, :content [{:tag :int32_t, :attrs {:name "item", :ref-target "item"}, :content nil} {:tag :enum, :attrs {:base-type "int16_t", :name "item_type", :type-name "item_type"}, :content nil} {:tag :int16_t, :attrs {:name "item_subtype", :refers-to "(item-subtype-target $$._parent.item_type $)"}, :content nil} {:tag :int16_t, :attrs {:name "mattype", :ref-target "material", :aux-value "$$.matindex"}, :content nil} {:tag :int32_t, :attrs {:name "matindex"}, :content nil} "\n\n            -- If shot by a ranged weapon:\n            " {:tag :int32_t, :attrs {:name "bow_item", :ref-target "item"}, :content nil} {:tag :enum, :attrs {:base-type "int16_t", :name "bow_item_type", :type-name "item_type"}, :content nil} {:tag :int16_t, :attrs {:name "bow_item_subtype", :refers-to "(item-subtype-target $$._parent.bow_item_type $)"}, :content nil} {:tag :int16_t, :attrs {:name "bow_mattype", :ref-target "material", :aux-value "$$.bow_matindex"}, :content nil} {:tag :int32_t, :attrs {:name "bow_matindex"}, :content nil}]} {:tag :stl-vector, :attrs {:name "inventory"}, :content [{:tag :pointer, :attrs {:key-field "item"}, :content [{:tag :pointer, :attrs {:name "item", :type-name "item"}, :content nil} {:tag :int16_t, :attrs {:name "mode", :comment "0 carried, 1 weapon, 2 worn, 9 sewn"}, :content nil} {:tag :int16_t, :attrs {:name "body_part_id"}, :content nil}]}]} {:tag :stl-vector, :attrs {:name "owned_items"}, :content [{:tag :int32_t, :attrs {:ref-target "item"}, :content nil}]} {:tag :stl-vector, :attrs {:name "traded_items", :comment "items brought to trade depot"}, :content [{:tag :int32_t, :attrs {:ref-target "item"}, :content nil}]} {:tag :stl-vector, :attrs {:name "owned_buildings"}, :content [{:tag :pointer, :attrs {:type-name "building"}, :content nil}]} {:tag :stl-vector, :attrs {:name "corpse_parts", :comment "entries remain even when items are destroyed"}, :content [{:tag :int32_t, :attrs {:ref-target "item"}, :content nil}]} {:tag :compound, :attrs {:name "job"}, :content [{:tag :uint32_t, :attrs {:name "unk_2d8"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_2dc"}, :content nil} {:tag :pointer, :attrs {:type-name "unit", :name "hunt_target"}, :content nil} {:tag :pointer, :attrs {:type-name "building", :name "destroy_target"}, :content nil} {:tag :int16_t, :attrs {:name "unk_2e8"}, :content nil} " // fight related\n            " {:tag :int16_t, :attrs {:name "unk_2ea"}, :content nil} " // fight related\n            " {:tag :uint16_t, :attrs {:name "unk_2ec"}, :content nil} {:tag :uint16_t, :attrs {:name "unk_2ee"}, :content nil} {:tag :uint16_t, :attrs {:name "unk_2f0_cntr"}, :content nil} " // increments every tick\n            " {:tag :pointer, :attrs {:comment "df_job", :name "current_job", :type-name "job"}, :content nil} {:tag :uint16_t, :attrs {:name "unk_2f8"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_2fc"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_300"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_304"}, :content nil}]} {:tag :compound, :attrs {:name "body"}, :content [{:tag :stl-vector, :attrs {:name "body_part_308", :type-name "uint32_t"}, :content nil} " // 87*0 ?\n\n            " {:tag :stl-vector, :attrs {:name "unk_318"}, :content nil} {:tag :stl-vector, :attrs {:name "body_layer_328", :type-name "uint32_t"}, :content nil} {:tag :stl-vector, :attrs {:name "body_layer_338", :type-name "uint32_t"}, :content nil} " // 238*0\n            " {:tag :stl-vector, :attrs {:name "body_layer_348", :type-name "uint32_t"}, :content nil} " // 238*0\n            " {:tag :stl-vector, :attrs {:name "body_layer_358", :type-name "uint32_t"}, :content nil} " // 238*0\n            " {:tag :stl-vector, :attrs {:name "body_layer_368", :type-name "uint32_t"}, :content nil} " // 238*0\n            " {:tag :stl-vector, :attrs {:name "body_layer_378", :type-name "uint32_t"}, :content nil} " // 238*0\n\n            " {:tag :stl-vector, :attrs {:name "body_layer_388", :type-name "pointer"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_398"}, :content nil} {:tag :int32_t, :attrs {:name "unk_39c"}, :content nil} {:tag :int32_t, :attrs {:name "unk_3a0"}, :content nil} {:tag :int32_t, :attrs {:name "unk_3a4"}, :content nil} {:tag :int32_t, :attrs {:name "unk_3a8"}, :content nil} {:tag :int32_t, :attrs {:name "unk_3ac"}, :content nil} {:tag :int32_t, :attrs {:name "unk_3b0"}, :content nil} {:tag :int32_t, :attrs {:name "unk_3b4"}, :content nil} {:tag :int32_t, :attrs {:name "unk_3b8"}, :content nil} {:tag :int32_t, :attrs {:name "unk_3bc"}, :content nil} {:tag :int32_t, :attrs {:name "unk_3c0"}, :content nil} {:tag :pointer, :attrs {:name "body_plan", :comment "points to the body_parts field of caste_raw"}, :content [{:tag :stl-vector, :attrs {:name "body_parts"}, :content [{:tag :pointer, :attrs {:type-name "body_part_raw"}, :content nil}]}]} {:tag :uint16_t, :attrs {:name "unk_3c8"}, :content nil} {:tag :static-array, :attrs {:type-name "unit_attribute", :name "physical_attrs", :count "6"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_474"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_478"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_47c"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_480"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_484"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_488"}, :content nil} {:tag :uint32_t, :attrs {:name "blood_max"}, :content nil} {:tag :uint32_t, :attrs {:name "blood_count"}, :content nil} " // 490\n            " {:tag :uint32_t, :attrs {:name "unk_494"}, :content nil} {:tag :stl-vector, :attrs {:name "spatters"}, :content nil}]} {:tag :compound, :attrs {:name "unknown6"}, :content [{:tag :stl-vector, :attrs {:type-name "uint16_t", :name "unk_4a8"}, :content nil} {:tag :stl-vector, :attrs {:type-name "uint16_t", :name "unk_4b8"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_4c8"}, :content nil} {:tag :stl-vector, :attrs {:type-name "int16_t", :name "unk_4cc"}, :content nil} {:tag :stl-vector, :attrs {:type-name "int32_t", :name "unk_4dc"}, :content nil} {:tag :stl-vector, :attrs {:type-name "int32_t", :name "unk_4ec"}, :content nil} {:tag :stl-vector, :attrs {:type-name "int32_t", :name "unk_4fc"}, :content nil} {:tag :stl-vector, :attrs {:type-name "int16_t", :name "unk_50c"}, :content nil} {:tag :pointer, :attrs {:name "unk_51c"}, :content nil} {:tag :uint16_t, :attrs {:name "unk_520"}, :content nil} {:tag :pointer, :attrs {:name "unk_524"}, :content nil} {:tag :uint16_t, :attrs {:name "unk_528"}, :content nil}]} {:tag :stl-vector, :attrs {:type-name "uint32_t", :name "appearance"}, :content nil} {:tag :compound, :attrs {:name "counters"}, :content [{:tag :int32_t, :attrs {:name "think_counter"}, :content nil} " // 53c decrements every job_counter reroll, set when changing jobs\n            " {:tag :int32_t, :attrs {:name "job_counter"}, :content nil} " // 540 current_job unit/walk done when reach -1, decremented every tick\n            " {:tag :int32_t, :attrs {:name "unk_544"}, :content nil} " // if set, decrements every job_counter reroll\n            " {:tag :int16_t, :attrs {:name "unk_548"}, :content nil} {:tag :int16_t, :attrs {:name "winded"}, :content nil} {:tag :int16_t, :attrs {:name "stunned"}, :content nil} " // 54c decrements every tick, unstun at 0\n            " {:tag :int16_t, :attrs {:name "unconscious"}, :content nil} {:tag :int16_t, :attrs {:name "unk_550"}, :content nil} {:tag :int16_t, :attrs {:name "webbed"}, :content nil} {:tag :int16_t, :attrs {:name "unk_x554"}, :content nil} " // coords ? (-30.000x3)\n            " {:tag :int16_t, :attrs {:name "unk_y556"}, :content nil} {:tag :int16_t, :attrs {:name "unk_z558"}, :content nil} {:tag :int16_t, :attrs {:name "unk_x55a"}, :content nil} " // coords again\n            " {:tag :int16_t, :attrs {:name "unk_y55c"}, :content nil} {:tag :int16_t, :attrs {:name "unk_z55e"}, :content nil} {:tag :int16_t, :attrs {:name "soldier_mood_countdown"}, :content nil} {:tag :enum, :attrs {:name "soldier_mood", :base-type "int16_t"}, :content [{:tag :enum-item, :attrs {:name "None", :value "-1"}, :content nil} {:tag :enum-item, :attrs {:name "MartialTrance"}, :content nil} {:tag :enum-item, :attrs {:name "Enranged"}, :content nil} {:tag :enum-item, :attrs {:name "Tantrum"}, :content nil}]} {:tag :uint32_t, :attrs {:name "unk_564"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_568"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_56c"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_570"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_574"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_578"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_57c"}, :content nil} {:tag :uint32_t, :attrs {:name "hunger_timer"}, :content nil} {:tag :uint32_t, :attrs {:name "thirst_timer"}, :content nil} {:tag :uint32_t, :attrs {:name "sleepiness_timer"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_58c"}, :content nil} " // counter, decrement to 0\n            " {:tag :uint32_t, :attrs {:name "unk_590"}, :content nil} " // same as 58c\n            " {:tag :uint32_t, :attrs {:name "unk_594"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_cntdn_598"}, :content nil} " // fluctuate\n            " {:tag :uint32_t, :attrs {:name "unk_59c"}, :content nil}]} {:tag :compound, :attrs {:name "status"}, :content [{:tag :stl-vector, :attrs {:name "misc_traits"}, :content [{:tag :pointer, :attrs {:type-name "unit_misc_trait"}, :content nil}]} {:tag :pointer, :attrs {:name "unk_5b0"}, :content [{:tag :stl-vector, :attrs {:type-name "int16_t"}, :content nil} {:tag :stl-vector, :attrs {:type-name "int16_t"}, :content nil} {:tag :stl-vector, :attrs {:type-name "int16_t"}, :content nil} {:tag :stl-vector, :attrs {:type-name "int32_t"}, :content nil} {:tag :stl-vector, :attrs {:type-name "int32_t"}, :content nil} {:tag :stl-vector, :attrs {:type-name "int32_t"}, :content nil} {:tag :stl-vector, :attrs {:type-name "int16_t"}, :content nil} {:tag :stl-vector, :attrs {:type-name "int16_t"}, :content nil} {:tag :stl-vector, :attrs {:type-name "int16_t"}, :content nil} {:tag :stl-vector, :attrs {:type-name "int32_t"}, :content nil} {:tag :stl-vector, :attrs {:type-name "int32_t"}, :content nil} {:tag :stl-vector, :attrs {:type-name "int32_t"}, :content nil}]} {:tag :uint32_t, :attrs {:name "unk_5b4"}, :content nil} " // 0x3e8 (1000)\n            " {:tag :uint32_t, :attrs {:name "unk_5b8"}, :content nil} " // 0x3e8 (1000)\n\n            " {:tag :stl-vector, :attrs {:name "unk_5bc"}, :content nil} {:tag :stl-vector, :attrs {:name "unk_5cc"}, :content nil} {:tag :int8_t, :attrs {:name "unk_5dc"}, :content nil} {:tag :compound, :attrs {:type-name "language_name", :name "artifact_name"}, :content nil} {:tag :stl-vector, :attrs {:name "souls"}, :content [{:tag :pointer, :attrs {:type-name "unit_soul"}, :content nil}]} {:tag :pointer, :attrs {:name "current_soul", :type-name "unit_soul"}, :content nil} {:tag :stl-vector, :attrs {:name "unk_660"}, :content nil} {:tag :static-array, :attrs {:type-name "bool", :name "labors", :index-enum "unit_labor", :count "94"}, :content nil} {:tag :stl-vector, :attrs {:name "unk_6d0"}, :content nil} {:tag :stl-vector, :attrs {:name "unk_6e0"}, :content nil} " // item ids?\n\n            " {:tag :stl-vector, :attrs {:name "recent_events"}, :content nil} " // 6f0: dined in a legendary dinning room, etc\n\n            " {:tag :stl-vector, :attrs {:name "unk_700"}, :content nil} {:tag :uint32_t, :attrs {:name "happiness"}, :content nil} " // 710\n            " {:tag :uint16_t, :attrs {:name "unk_714"}, :content nil} {:tag :stl-vector, :attrs {:name "unk_718"}, :content nil} {:tag :stl-vector, :attrs {:name "unk_728"}, :content nil} {:tag :stl-vector, :attrs {:name "relationships"}, :content nil} " // 738\n            " {:tag :stl-vector, :attrs {:name "unk_748"}, :content nil} {:tag :uint16_t, :attrs {:name "unk_758"}, :content nil} {:tag :int16_t, :attrs {:name "unk_x75a"}, :content nil} " // coords (-30000*3)\n            " {:tag :int16_t, :attrs {:name "unk_y75c"}, :content nil} {:tag :int16_t, :attrs {:name "unk_z75e"}, :content nil} {:tag :stl-vector, :attrs {:type-name "uint16_t", :name "unk_760"}, :content nil} {:tag :stl-vector, :attrs {:type-name "uint16_t", :name "unk_770"}, :content nil} {:tag :stl-vector, :attrs {:type-name "uint16_t", :name "unk_780"}, :content nil}]} {:tag :int32_t, :attrs {:name "hist_figure_id", :ref-target "historical_figure"}, :content nil} {:tag :compound, :attrs {:name "status2"}, :content [{:tag :uint16_t, :attrs {:name "able_stand"}, :content nil} " // 794\n            " {:tag :uint16_t, :attrs {:name "able_stand_impair"}, :content nil} " // 796\n            " {:tag :uint16_t, :attrs {:name "able_grasp"}, :content nil} " // 798\n            " {:tag :uint16_t, :attrs {:name "able_grasp_impair"}, :content nil} " // 79a\n            " {:tag :uint32_t, :attrs {:name "unk_79c"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_7a0"}, :content nil} {:tag :stl-vector, :attrs {:name "body_part_temperature"}, :content [{:tag :pointer, :attrs nil, :content [{:tag :uint16_t, :attrs {:name "whole"}, :content nil} {:tag :uint16_t, :attrs {:name "fraction", :comment "the unit is 1/temp_factor in body part"}, :content nil}]}]} {:tag :uint32_t, :attrs {:name "unk_7b4"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_7b8"}, :content nil} {:tag :uint8_t, :attrs {:name "unk_7bc"}, :content nil} {:tag :int32_t, :attrs {:name "unk_7c0"}, :content nil}]} {:tag :compound, :attrs {:name "unknown8"}, :content [{:tag :stl-vector, :attrs {:name "unk_7c4"}, :content nil} {:tag :stl-vector, :attrs {:name "unk_7d4", :type-name "int32_t"}, :content nil} {:tag :stl-vector, :attrs {:name "unk_7e4", :type-name "int16_t"}, :content nil} {:tag :stl-vector, :attrs {:name "unk_7f4", :type-name "int32_t"}, :content nil} " // combat log?\n            " {:tag :stl-vector, :attrs {:name "unk_804", :type-name "int32_t"}, :content nil} {:tag :stl-vector, :attrs {:name "unk_814", :type-name "int32_t"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_824"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_828"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_82c"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_830"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_834"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_838"}, :content nil} {:tag :pointer, :attrs {:name "unk_83c"}, :content nil} {:tag :stl-vector, :attrs {:name "unk_840", :type-name "pointer"}, :content nil} " // item related\n\n            " {:tag :stl-vector, :attrs {:name "unk_850"}, :content nil} {:tag :stl-vector, :attrs {:name "unk_860", :type-name "int32_t"}, :content nil} {:tag :int32_t, :attrs {:name "unk_870"}, :content nil} {:tag :int32_t, :attrs {:name "unk_874_cntr"}, :content nil} " // age ? incremented every tick\n\n            " {:tag :stl-vector, :attrs {:name "body_part_878", :type-name "uint8_t"}, :content nil} {:tag :stl-vector, :attrs {:name "body_part_888", :type-name "uint8_t"}, :content nil} {:tag :stl-vector, :attrs {:name "body_part_898", :type-name "uint32_t"}, :content nil} {:tag :stl-vector, :attrs {:name "body_part_8a8", :type-name "uint8_t"}, :content nil} {:tag :stl-vector, :attrs {:name "body_part_8b8", :type-name "uint16_t"}, :content nil} {:tag :stl-vector, :attrs {:name "body_part_8c8", :type-name "uint16_t"}, :content nil} {:tag :stl-vector, :attrs {:name "body_part_8d8", :type-name "uint16_t"}, :content nil} {:tag :stl-vector, :attrs {:name "unk_8e8"}, :content nil} " // items ids?\n\n            " {:tag :stl-vector, :attrs {:type-name "uint16_t", :name "unk_8f8"}, :content nil} " // same size as 8e8, soldier related?\n\n            " {:tag :stl-vector, :attrs {:name "body_layer_908", :type-name "uint32_t"}, :content nil} {:tag :int32_t, :attrs {:name "unk_918"}, :content nil} {:tag :int32_t, :attrs {:name "unk_91c"}, :content nil} {:tag :int32_t, :attrs {:name "unk_920"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_924"}, :content nil} {:tag :uint32_t, :attrs {:name "unk_928"}, :content nil}]} {:tag :stl-vector, :attrs {:name "burrows"}, :content [{:tag :int32_t, :attrs {:ref-target "burrow"}, :content nil}]} {:tag :uint32_t, :attrs {:name "unk_93c"}, :content nil}]} {:tag :struct-type, :attrs {:type-name "unit_attribute"}, :content [{:tag :int32_t, :attrs {:name "unk1"}, :content nil} {:tag :int32_t, :attrs {:name "unk2"}, :content nil} {:tag :int32_t, :attrs {:name "unk3"}, :content nil} {:tag :int32_t, :attrs {:name "unk4"}, :content nil} {:tag :int32_t, :attrs {:name "unk5"}, :content nil} {:tag :int32_t, :attrs {:name "unk6"}, :content nil} {:tag :int32_t, :attrs {:name "unk7"}, :content nil}]} {:tag :struct-type, :attrs {:type-name "unit_misc_trait"}, :content [{:tag :enum, :attrs {:base-type "int16_t", :name "id"}, :content [{:tag :enum-item, :attrs {:name "ClaimCooldown", :value "12"}, :content nil} {:tag :enum-item, :attrs {:name "WantsDrink"}, :content nil} {:tag :enum-item, :attrs {:name "LikesOutdoors"}, :content nil} {:tag :enum-item, :attrs {:name "Hardened"}, :content nil}]} {:tag :code-helper, :attrs {:name "describe"}, :content ["(fmt \"id=~A value=~A\" $.id $.value)"]} {:tag :int32_t, :attrs {:name "value"}, :content nil}]} {:tag :struct-type, :attrs {:type-name "unit_soul"}, :content [{:tag :int32_t, :attrs {:name "unit_id", :ref-target "unit"}, :content nil} {:tag :compound, :attrs {:name "name", :type-name "language_name"}, :content nil} {:tag :uint32_t, :attrs {:name "race", :ref-target "creature_raw"}, :content nil} {:tag :uint8_t, :attrs {:name "sex"}, :content nil} {:tag :uint16_t, :attrs {:name "caste", :ref-target "caste_raw", :aux-value "$$.race"}, :content nil} {:tag :code-helper, :attrs {:name "describe"}, :content ["\n            (describe-obj $.name)\n            (awhen (find-creature $.race)\n            (fmt \"~:(~A ~A~)\" $it.caste[$.caste].caste_id $it.creature_id))\n        "]} {:tag :int32_t, :attrs {:name "unk1"}, :content nil} {:tag :int32_t, :attrs {:name "unk2"}, :content nil} {:tag :int32_t, :attrs {:name "unk3"}, :content nil} {:tag :int32_t, :attrs {:name "unk4"}, :content nil} {:tag :static-array, :attrs {:type-name "unit_attribute", :name "mental_attrs", :count "13"}, :content nil} {:tag :stl-vector, :attrs {:name "skills"}, :content [{:tag :pointer, :attrs {:type-name "unit_skill"}, :content nil}]} {:tag :stl-vector, :attrs {:name "preferences"}, :content [{:tag :pointer, :attrs {:type-name "unit_preference"}, :content nil}]} {:tag :static-array, :attrs {:type-name "uint16_t", :name "traits", :count "30"}, :content nil} {:tag :stl-vector, :attrs {:name "unk5"}, :content [{:tag :pointer, :attrs nil, :content [{:tag :int16_t, :attrs {:name "unk1"}, :content nil} {:tag :int16_t, :attrs {:name "unk2"}, :content nil}]}]} {:tag :stl-vector, :attrs {:name "unk6"}, :content nil}]} {:tag :struct-type, :attrs {:type-name "unit_skill"}, :content [{:tag :enum, :attrs {:base-type "int16_t", :name "id", :type-name "job_skill"}, :content nil} {:tag :code-helper, :attrs {:name "describe"}, :content ["$.id"]} {:tag :int32_t, :attrs {:name "rating"}, :content nil} {:tag :uint32_t, :attrs {:name "experience"}, :content nil} {:tag :int32_t, :attrs {:name "unk_c"}, :content nil} {:tag :int32_t, :attrs {:name "rusty"}, :content nil} {:tag :int32_t, :attrs {:name "unk_14"}, :content nil} {:tag :int32_t, :attrs {:name "unk_18"}, :content nil} {:tag :int32_t, :attrs {:name "unk_1c"}, :content nil}]} {:tag :struct-type, :attrs {:type-name "unit_preference"}, :content [{:tag :enum, :attrs {:base-type "int16_t", :name "type"}, :content [{:tag :enum-item, :attrs {:name "LikeMaterial"}, :content nil} {:tag :enum-item, :attrs {:name "LikeCreature"}, :content nil} {:tag :enum-item, :attrs {:name "LikeFood"}, :content nil} {:tag :enum-item, :attrs {:name "HateCreature"}, :content nil} {:tag :enum-item, :attrs {:name "LikeItem"}, :content nil} {:tag :enum-item, :attrs {:name "LikePlant"}, :content nil} {:tag :enum-item, :attrs {:name "LikePlant2", :comment "likely 2nd prefstring"}, :content nil} {:tag :enum-item, :attrs {:name "LikeColor"}, :content nil} {:tag :enum-item, :attrs {:name "LikeShape"}, :content nil}]} {:tag :code-helper, :attrs {:name "describe"}, :content ["$.type"]} {:tag :compound, :attrs {:is-union "true"}, :content [{:tag :int16_t, :attrs {:name "item_type", :refers-to "(enum-to-key $item_type $)"}, :content nil} {:tag :int16_t, :attrs {:name "creature_id", :ref-target "creature_raw"}, :content nil} {:tag :int16_t, :attrs {:name "color_id", :refers-to "$global.world.raws.color_words[$]"}, :content nil} {:tag :int16_t, :attrs {:name "shape_id", :refers-to "$global.world.raws.shape_words[$]"}, :content nil} {:tag :int16_t, :attrs {:name "plant_id", :ref-target "plant_raw"}, :content nil}]} {:tag :int16_t, :attrs {:name "item_subtype", :refers-to "(item-subtype-target $$._parent.item_type $)"}, :content nil} {:tag :int16_t, :attrs {:name "mattype", :ref-target "material", :aux-value "$$.matindex"}, :content nil} {:tag :int32_t, :attrs {:name "matindex"}, :content nil} {:tag :bool, :attrs {:name "active"}, :content nil} {:tag :uint32_t, :attrs {:name "unk"}, :content nil}]}]}